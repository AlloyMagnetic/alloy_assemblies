<?php

/**
 * @file
 * Contains alloy_assemblies.module.
 */

function alloy_assemblies_preprocess_assembly(&$variables) {
  $assembly = $variables['elements']['#assembly'];
  $type = $assembly->bundle();

  if ($type == 'hubspot_cta_embed') {
    $hubspot_id = $assembly->get('field_hubspot_id')->value;
    $uuid = $assembly->get('field_hubspot_uuid')->value;
    if ($embed = $assembly->get('field_embed_code')->value) {
      $ctas = alloy_assemblies_hubspot_cta_from_embed($embed);
      $hubspot_id = $ctas['hubspot_id'];
      $uuid = $ctas['uuid'];
    }

    $variables['content']['cta'] = [
      '#theme' => 'hubspot_cta',
      '#hubspot_id' => $hubspot_id,
      '#uuid' => $uuid,
    ];
  }

  if ($type == 'hubspot_form_embed') {
    $entity_id = $assembly->get('uuid')->value;
    $form_vars = alloy_assemblies_parse_hubspot_embed($assembly->get('field_embed_code')->value);
    $variables['content']['form'] = [
      '#theme' => 'hubspot_form',
      '#entity_id' => $entity_id,
      '#portalid' => $form_vars['portalid'],
      '#formid' => $form_vars['formid'],
    ];
  }

  if ($type == 'columns') {
    $columns = $assembly->get('field_column')->getValue();
    $col_count = count($columns) > 4 ? 4 : count($columns);
    $variables['column_span'] = '';
    $variables['tablet_column_span'] = '';

    if ($col_count) {
      $variables['column_span'] = 12/count($columns);
      $variables['tablet_column_span'] = $col_count > 1 ? 6 : 12;
      $variables['columns'] = [];

      foreach ($columns as $column) {
        $variables['columns'][] = ['#markup' => $column['value']];
      }
    }
  }
}

/**
 * Extract the CTA information from a HubSpot embed code.
 */
function alloy_assemblies_hubspot_cta_from_embed($embed) {
  preg_match("/hbspt.cta.load\((.*)\)/", $embed, $matches);
  if (!isset($matches[1]) || empty($matches[1])) {
    return FALSE;
  }
  $data = json_decode('[' . str_replace("'", '"', $matches[1]) . ']' );
  return array(
    'hubspot_id' => $data[0],
    'uuid' => $data[1],
  );
}

function alloy_assemblies_parse_hubspot_embed($embed) {
  preg_match('/portalid:\s*\'(\d+)\'/i', $embed, $portal);
  preg_match('/formid:\s*\'([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})\'/i', $embed, $formid);

  return [
    'portalid' => isset($portal[1]) && !empty($portal[1]) ? $portal[1] : FALSE,
    'formid' => isset($formid[1]) && !empty($formid[1]) ? $formid[1] : FALSE,
  ];
}

function alloy_assemblies_theme($existing, $type, $theme, $path) {
  $theme = [];
  $theme['hubspot_form'] = [
    'template' => 'hubspot-form',
    'variables' => [
      'entity_id' => NULL,
      'portalid' => NULL,
      'formid' => NULL
    ],
  ];
  $theme['hubspot_cta'] = [
    'template' => 'hubspot-cta',
    'variables' => [
      'hubspot_id' => NULL,
      'uuid' => NULL,
    ],
  ];

  return $theme;
}

function alloy_assemblies_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path('module', 'alloy_assemblies');

  // Assembly types with a default template
  // defined in this module
  $types = [
    'columns',
  ];

  foreach ($types as $type) {
    if (isset($theme_registry['assembly']) && !isset($theme_registry['assembly__' . $type])) {
      $theme_registry['assembly__' . $type] = $theme_registry['assembly'];
      $theme_registry['assembly__' . $type]['template'] = 'assembly--' . str_replace('_', '-', $type);
      $theme_registry['assembly__' . $type]['theme_path'] = $path;
      $theme_registry['assembly__' . $type]['path'] = $path . '/templates';
    }
  }
}
